[project]
name = "wasm"
version = "0.1.0"
description = "Setup a pixi environment for building a jupyterlite app with WASM"
platforms = ["emscripten-wasm32", "osx-arm64", "linux-64", "win-64"]
channels = ["conda-forge"]

[feature.wasm]
# add the emscripten-forge channel to the list of channels
channels = ["https://repo.prefix.dev/emscripten", # Mine for xeus-ocaml package
            "https://repo.prefix.dev/emscripten-forge-dev"]
platforms = ["emscripten-wasm32"]

[feature.wasm.dependencies]
xeus-python = "*"
xeus-cpp = "*"
xeus-sqlite = "*"
xeus-javascript = "*"
xeus-ocaml = "*"

[feature.host]
channels = ["conda-forge"]
platforms = ["osx-arm64", "linux-64", "win-64"]

[feature.host.dependencies]
jupyterlab-language-pack-fr-FR = "*"
jupyterlite-xeus = "==4.2.0"
jupyterlite-pyodide-kernel = "*"
jupyter_server = "*"
ipywidgets = "*"
jupyterlab = "*"

# make sure that we have the WASM environment installed before building the app
[feature.host.tasks]
setup_wasm = { cmd = "pixi install -e wasm", inputs = ["pixi.lock"] }

# build the jupyterlite app
[feature.host.tasks.build]
cmd = "jupyter lite build --XeusAddon.prefix=.pixi/envs/wasm"
depends-on = ["setup_wasm"]
outputs = ["_output"]
inputs = ["pixi.lock"]

# serve the jupyterlite app with a "simple server"
[feature.host.tasks.serve]
cmd = "python -m http.server 8000 -d dist"
depends-on = ["build"]

[environments]
default = ["host"]
wasm = ["wasm"]